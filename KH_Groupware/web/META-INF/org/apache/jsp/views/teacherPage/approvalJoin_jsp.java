/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-26 17:52:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.teacherPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import member.model.vo.Member;

public final class approvalJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	ArrayList<Member> stdList = (ArrayList) session.getAttribute("stdList");

	int i;
	int count = 0;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc='https://cdnjs.cloudflare.com/ajax/libs/bPopup/0.11.0/jquery.bpopup.min.js'></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#outer {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tborder: 3px solid red;\r\n");
      out.write("\tpadding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#content {\r\n");
      out.write("\tmargin: 25%;\r\n");
      out.write("\tmargin-top: 3%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#stdList {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#stdList>table {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tborder-top: 0.5px solid darkgray;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#stdList td {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tborder-bottom: 0.5px solid darkgray;\r\n");
      out.write("\tpadding: 1.5px;\r\n");
      out.write("\theight: 50px;\r\n");
      out.write("\tfont-size: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("[id*=popUp] {\r\n");
      out.write("\twidth: 700px;\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("\tbackground: grey;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("[id*=popUp]>div {\r\n");
      out.write("\twidth: 347px;\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("\tvertical-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("[id*=popUp]>div>div, [id*=msg] {\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfont-size: 60px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"outer\">\r\n");
      out.write("\t\t<div id=\"content\">\r\n");
      out.write("\t\t\t<div id=\"stdList\">\r\n");
      out.write("\t\t\t\t<table align=\"center\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"100px\">학생이름</th>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"200px\">생년월일</th>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"250px\">전화번호</th>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"300px\">가입일</th>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"400px\"></th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");

						for (i = 0; i < stdList.size(); i++) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						if (stdList.get(i).getApprove().equals("N")) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr id=\"std");
      out.print(i);
      out.write("\" class=\"std\">\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(stdList.get(i).getUserName());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(stdList.get(i).getRRN());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(stdList.get(i).getPhone());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(stdList.get(i).getEnrollDate());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"appInfo");
      out.print(i);
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
 count++;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#std");
      out.print(i);
      out.write("\").css({\"background\":\"white\"});\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#appInfo");
      out.print(i);
      out.write("\").text(\"'승인 대기 중입니다.'\").css({\"font-style\":\"italic\",\"font-weight\":\"10\"});\r\n");
      out.write("\t\t\t\t\t\t\t$(\".std\").hover(function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t  $(this).css({\"background\":\"whitesmoke\", \"cursor\" : \"pointer\"});\r\n");
      out.write("\t\t\t\t\t\t\t\t}, function(){\r\n");
      out.write("\t\t\t\t\t\t\t\t  $(this).css(\"background\", \"white\");\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t$(function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#std");
      out.print(i);
      out.write("').on('click', function(e) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$('#popUp");
      out.print(i);
      out.write("').bPopup({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmodalClose : false\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\t\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#hol");
      out.print(i);
      out.write("\").click(function(){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$('#popUp");
      out.print(i);
      out.write("').bPopup().close();\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div id=\"popUp");
      out.print(i);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"app");
      out.print(i);
      out.write("\" onclick = \"appJoin(");
      out.print(stdList.get(i).getUserNo());
      out.write(',');
      out.write(' ');
      out.write('\'');
      out.print(stdList.get(i).getUserId());
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(i);
      out.write(");\" style = \"background: whitesmoke; color: grey\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>가입승인\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div id=\"hol");
      out.print(i);
      out.write("\" style=\"background: grey; color: white\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>보류\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"msg\"\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"background-color: none; color: white; font-size: 35px; display: block; width: 700px; height: 100px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<em> 승인된 학생은 <br>승인을 취소할 수 없습니다.</em>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t");

					}
					if(count == 0){
					
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t<h2>승인 대기 중인 학생이 없습니다.</h2>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(\"[id*=app], [id*=hol]\").hover(function() {\r\n");
      out.write("\t\t\t$(this).css({\r\n");
      out.write("\t\t\t\t\"opacity\" : \"0.5\",\r\n");
      out.write("\t\t\t\t\"cursor\" : \"pointer\"\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}, function() {\r\n");
      out.write("\t\t\t$(this).css({\r\n");
      out.write("\t\t\t\t\"opacity\" : \"1.5\"\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"[id*=appInfo]\").unbind('mouseenter mouseleave');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction appJoin(userNo, userId, i) {\r\n");
      out.write("\t\t\tconsole.log(\"ddd\");\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"/KH_Groupware/approve.te\",\r\n");
      out.write("\t\t\t\ttype : \"get\",\r\n");
      out.write("\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\tuserNo : userNo,\r\n");
      out.write("\t\t\t\t\tuserId : userId,\r\n");
      out.write("\t\t\t\t\ti : i\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\talert(\"정상적으로 가입이 승인되었습니다.\");\r\n");
      out.write("\t\t\t\t\t/* $(\"#std\"+i).css({\"background\":\"rgb(180,180,180)\",\"color\":\"white\"}).unbind('mouseenter mouseleave'); */\r\n");
      out.write("\t\t\t\t\t/* $(\"#appInfo\"+i).text(\"승인되었습니다.\"); */\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t $(\"#std\"+i).css({\"display\":\"none\"});\r\n");
      out.write("\t\t\t\t\t$(\"#popUp\"+i).bPopup().close();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
