/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-24 14:51:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.teacherPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;
import java.util.ArrayList;

public final class seatView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

   ArrayList<Member> List = (ArrayList)session.getAttribute("stdList");

   ArrayList<Member> stdList = new ArrayList();
   
   for(int i = 0 ; i < List.size() ; i++){
      if(List.get(i).getApprove().equals("Y")){
         stdList.add(List.get(i));
      }
   }

   
   int count = 1;
   int countSize = stdList.size();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script   src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#outer {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tborder: 3px solid red;\r\n");
      out.write("\tpadding-left: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#content {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tmargin: 10%;\r\n");
      out.write("\tmargin-top: 0%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#seatTableArea {\r\n");
      out.write("\tmargin: 1%;\r\n");
      out.write("\twidth: 66%;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\theight: 100px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#stdListArea div{\r\n");
      out.write("\tpadding: 7px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#seatTableArea table .seat {\r\n");
      out.write("\ttext-align: center; border : 0.5px solid black;\r\n");
      out.write("\theight: 90px;\r\n");
      out.write("\tbackground: lightgrey;\r\n");
      out.write("\tborder: 0.5px solid white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#seatTableArea table #hallway {\r\n");
      out.write("\theight: 120px;\r\n");
      out.write("\tbackground: lightgrey;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".seat {\r\n");
      out.write("\twidth: 15%;\r\n");
      out.write("\theight: 120px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#hallway {\r\n");
      out.write("\twidth: 300px;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tbackground: lightgrey;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#front {\r\n");
      out.write("\twidth: 1000px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tbackground: lightgrey;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#front td {\r\n");
      out.write("\theight: 120px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#stdListArea {\r\n");
      out.write("\twidth: 30%;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#std {\r\n");
      out.write("\twidth: 30%;\r\n");
      out.write("\theight: 40px;\r\n");
      out.write("\tborder: 1px solid red;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".list {\r\n");
      out.write("\tbackground: white;\r\n");
      out.write("\tborder: 1px solid grey;\r\n");
      out.write("\twidth: 1000px;\r\n");
      out.write("\theight: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".list table[id^=stdInfo] td {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tbackground: white;\r\n");
      out.write("\tborder: 0.3px solid black;\r\n");
      out.write("\twidth: 1000px;\r\n");
      out.write("\tfont-size: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("[id^=sNo]{\r\n");
      out.write("\tpadding-left: 10px;\r\n");
      out.write("\tpadding-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".seat table[id^=stdInfo] td {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tbackground: white;\r\n");
      out.write("\tborder: 0.3px solid black;\r\n");
      out.write("\twidth: 1000px;\r\n");
      out.write("\tfont-size: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn {\r\n");
      out.write("\twidth: 150px;\r\n");
      out.write("\theight: 50px;\r\n");
      out.write("\tfloat: right;\r\n");
      out.write("\tmargin-right: 2%;\r\n");
      out.write("\tmargin-top: 5px;\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#saveSeat {\r\n");
      out.write("\tborder: 1px solid white;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tbackground: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#resetSeat {\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tbackground: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".seat:hover {\r\n");
      out.write("\tbackground: whitesmoke;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".list:hover {\r\n");
      out.write("\tbackground: whitesmoke;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#stdList, #seatTable, table[id^=stdInfo] {\r\n");
      out.write("\tborder-spacing: 0px;\r\n");
      out.write("\tmargin\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#seatTable {\r\n");
      out.write("\tborder: 1px solid white;\r\n");
      out.write("\theight: 500px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <div id=\"outer\">\r\n");
      out.write("      <div id=\"content\">\r\n");
      out.write("         <div id=\"seatTableArea\">\r\n");
      out.write("\t\t&nbsp;\r\n");
      out.write("         <h3 style=\"text-align: left; font-size: 40px; margin-top: 80px; height: 84px;\">\r\n");
      out.write("         <em>자리배치</em>\r\n");
      out.write("     \t </h3>\r\n");
      out.write("            <table id=\"seatTable\" >\r\n");
      out.write("               <tr id=\"front\">\r\n");
      out.write("                  <td colspan=\"7\"></td>\r\n");
      out.write("               </tr>\r\n");
      out.write("               ");
for (int i = 0 ; i < 5 ; i++){ 
               int j;
      out.write("\r\n");
      out.write("               <tr>\r\n");
      out.write("                  ");
for (j = 0; j < 3 ; j++){ 
      out.write("\r\n");
      out.write("                  <td id=\"sNo");
      out.print(i*6+j+1);
      out.write("\" class=\"seat\" ondrop = \"drop(event)\" ondragover = \"allowDrop(event)\">");
      out.print(i*6+j+1);
      out.write("</td>\r\n");
      out.write("                  ");
} 
      out.write("\r\n");
      out.write("                  ");
if(i==0 && j==3){ 
      out.write("\r\n");
      out.write("                  <td rowspan=\"5\" id=\"hallway\"></td>\r\n");
      out.write("                  ");
} 
      out.write("\r\n");
      out.write("                  ");
for (j = 4; j < 7 ; j++){ 
      out.write("\r\n");
      out.write("                  <td id=\"sNo");
      out.print(i*6+j);
      out.write("\" class=\"seat\" ondrop = \"drop(event)\" ondragover = \"allowDrop(event)\">");
      out.print(i*6+j);
      out.write("</td>\r\n");
      out.write("                  ");
} 
      out.write("\r\n");
      out.write("               </tr>\r\n");
      out.write("               ");
} 
      out.write("\r\n");
      out.write("            </table>\r\n");
      out.write("         </div>\r\n");
      out.write("         <div id=\"stdListArea\">\r\n");
      out.write("         \t&nbsp;\r\n");
      out.write("            <table id=\"stdList\">\r\n");
      out.write("               ");
for (int i = 0 ; i < 10 ; i++){ 
      out.write("\r\n");
      out.write("               <tr>\r\n");
      out.write("                  ");
for (int j = 0 ; j < 3 ; j++){ 
      out.write("\r\n");
      out.write("                        <td id = \"list");
      out.print((i*3+j+1));
      out.write("\" class=\"list\" ondrop = \"drop(event);\" ondragover = \"allowDrop(event)\">\r\n");
      out.write("                        </td>\r\n");
      out.write("                  ");
} 
      out.write("\r\n");
      out.write("               </tr>\r\n");
      out.write("               ");
} 
      out.write("\r\n");
      out.write("            </table>\r\n");
      out.write("         </div>\r\n");
      out.write("         <div>\r\n");
      out.write("            <button id = \"saveSeat\" class = \"btn\">저장하기</button>\r\n");
      out.write("            <button id = \"resetSeat\" class = \"btn\" onclick = \"resetSeat();\">초기화</button>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("   <script>\r\n");
      out.write("   \r\n");
      out.write("HashMap = function(){\r\n");
      out.write("   this.map = new Array();\r\n");
      out.write("};\r\n");
      out.write(" \r\n");
      out.write("HashMap.prototype= {\r\n");
      out.write("      put : function(key, value){\r\n");
      out.write("         this.map[key] = value;\r\n");
      out.write("      },\r\n");
      out.write("      get : function(key){\r\n");
      out.write("         return this.map[key];\r\n");
      out.write("      },\r\n");
      out.write("      getAll : function(){\r\n");
      out.write("         return this.map;\r\n");
      out.write("      },\r\n");
      out.write("      clear : function(){\r\n");
      out.write("         this.map = new Array();\r\n");
      out.write("      },\r\n");
      out.write("      getKeys : function(){\r\n");
      out.write("         var keys = new Array();\r\n");
      out.write("         for(i in this.map){\r\n");
      out.write("            key.push(i);\r\n");
      out.write("         }\r\n");
      out.write("         return keys;\r\n");
      out.write("      },\r\n");
      out.write("       remove : function(key){    \r\n");
      out.write("            delete this.map[key];\r\n");
      out.write("       },\r\n");
      out.write("       isEmpty : function(){    \r\n");
      out.write("            return (this.map.size() == 0);\r\n");
      out.write("       },\r\n");
      out.write("       toString : function(){\r\n");
      out.write("           var temp = '';\r\n");
      out.write("           for(i in this.map){  \r\n");
      out.write("               temp = temp + ',' + i + ':' +  this.map[i];\r\n");
      out.write("           }\r\n");
      out.write("           temp = temp.replace(',','');\r\n");
      out.write("             return temp;\r\n");
      out.write("       },\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("var seatMap = new HashMap();\r\n");
for (int i = 0 ; i < stdList.size() ; i++){
      out.write("\r\n");
      out.write("   seatMap.put(\"");
      out.print(stdList.get(i).getUserNo());
      out.write('"');
      out.write(',');
      out.write('"');
      out.print(stdList.get(i).getSeat());
      out.write("\");\r\n");
}
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("function allowDrop(ev) {\r\n");
      out.write("  ev.preventDefault();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function drag(ev) {   \r\n");
      out.write("  ev.dataTransfer.setData(\"std\", ev.target.id);\r\n");
      out.write("  $(ev.target).parent().attr({\"ondrop\":\"drop(event)\", \"ondragover\":\"allowDrop(event)\"});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function drop(ev) {\r\n");
      out.write("    \r\n");
      out.write("  ev.preventDefault();\r\n");
      out.write("  var std = ev.dataTransfer.getData(\"std\");\r\n");
      out.write("  var stdNo = $(\"#\"+std+\" .userNo\").text()\r\n");
      out.write("  var seatNo = (ev.target.id).substring(3,5);\r\n");
      out.write("\r\n");
      out.write("  if(seatNo.startsWith(\"t\")){\r\n");
      out.write("     seatNo = \"N\";\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  seatMap.put(stdNo,seatNo);\r\n");
      out.write("  console.log(seatMap); \r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  console.log(stdNo+\"번 학생이 \"+seatNo+\"번 자리에 배정 받습니다.\");\r\n");
      out.write("  \r\n");
      out.write("  ev.target.appendChild(document.getElementById(std));\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(\"#saveSeat\").click(function(){\r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url:\"/KH_Groupware/updateSeat.te\",\r\n");
      out.write("         data:{seatMap : seatMap.toString()   \r\n");
      out.write("         },\r\n");
      out.write("         success:function(data){   \r\n");
      out.write("        \tif(!confirm(\"저장하시겠습니까?\")){\r\n");
      out.write("        \t\treturn false;\r\n");
      out.write("        \t} \r\n");
      out.write("            alert(\"저장이 완료되었습니다.\"); \r\n");
      out.write("            }\r\n");
      out.write("         }\r\n");
      out.write("      );  \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* $(function(){\r\n");
      out.write("\r\n");
      out.write("      $(\".seat\").attr({\"ondrop\":\"drop(event)\", \"ondragover\":\"allowDrop(event)\"});\r\n");
      out.write("      $(\".list\").attr({\"ondrop\":\"drop(event)\", \"ondragover\":\"allowDrop(event)\"});\r\n");
      out.write("      ondrop = \"drop(event);\" ondragover = \"allowDrop(evnet)\"\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write(" */\r\n");
      out.write("\r\n");
      out.write("var setSeat = $(function(){\r\n");
      out.write("\r\n");
      out.write("   ");
for (int i = 0 ; i < 10 ; i++){ 
      out.write("\r\n");
      out.write("      ");
for (int j = 0 ; j < 3 ; j++){ 
      out.write("\r\n");
      out.write("         ");
if(countSize > 0 && stdList.get(i*3+j) != null){ 
      out.write("\r\n");
      out.write("            ");
 countSize--;
      out.write("\r\n");
      out.write("            ");
if(stdList.get(i*3+j).getSeat().equals("N")){
      out.write("\r\n");
      out.write("               $(\"#list");
      out.print(count);
      out.write("\").html(\"<div id = 'std");
      out.print((i*3+j+1));
      out.write("' class='std' draggable='true' ondragstart='drag(event)'>\"\r\n");
      out.write("                                     +\"<table id='stdInfo");
      out.print((i*3+j+1));
      out.write("'>\"\r\n");
      out.write("                                       +\"<tr>\"\r\n");
      out.write("                                          +\"<td>");
      out.print(stdList.get(i*3+j).getUserName());
      out.write("</td>\"\r\n");
      out.write("                                          +\"<td>");
      out.print(stdList.get(i*3+j).getRRN());
      out.write("</td>\"\r\n");
      out.write("                                       +\"</tr>\"\r\n");
      out.write("                                       +\"<tr>\"\r\n");
      out.write("                                          +\"<td>수준 : ");
      out.print(stdList.get(i*3+j).getStdLv());
      out.write("</td>\"\r\n");
      out.write("                                          +\"<td>경험 : ");
      out.print(stdList.get(i*3+j).getExp());
      out.write("</td>\"\r\n");
      out.write("                                       +\"</tr>\"\r\n");
      out.write("                                       +\"<tr>\"\r\n");
      out.write("                                          +\"<td>전공 : ");
      out.print(stdList.get(i*3+j).getMajor());
      out.write("</td>\"\r\n");
      out.write("                                          +\"<td>흡연 : ");
      out.print(stdList.get(i*3+j).getSmoking());
      out.write("</td>\"\r\n");
      out.write("                                          +\"<td style = 'display:none' class = 'userNo'>");
      out.print(stdList.get(i*3+j).getUserNo());
      out.write("</td>\"\r\n");
      out.write("                                       +\"</tr>\"\r\n");
      out.write("                                    +\"</table>\"\r\n");
      out.write("                                 +\"</div\");\r\n");
      out.write("               ");
count++; 
      out.write("\r\n");
      out.write("\r\n");
      out.write("            ");
} else{
      out.write("\r\n");
      out.write("               $(\"#sNo");
      out.print(stdList.get(i*3+j).getSeat());
      out.write("\").html(\"<div id = 'std");
      out.print((i*3+j+1));
      out.write("' class='std' draggable='true' ondragstart='drag(event)'>\"\r\n");
      out.write("                                     +\"<table id='stdInfo");
      out.print((i*3+j+1));
      out.write("'>\"\r\n");
      out.write("                                       +\"<tr>\"\r\n");
      out.write("                                          +\"<td>");
      out.print(stdList.get(i*3+j).getUserName());
      out.write("</td>\"\r\n");
      out.write("                                          +\"<td>");
      out.print(stdList.get(i*3+j).getRRN());
      out.write("</td>\"\r\n");
      out.write("                                       +\"</tr>\"\r\n");
      out.write("                                       +\"<tr>\"\r\n");
      out.write("                                          +\"<td>수준 : ");
      out.print(stdList.get(i*3+j).getStdLv());
      out.write("</td>\"\r\n");
      out.write("                                          +\"<td>경험 : ");
      out.print(stdList.get(i*3+j).getExp());
      out.write("</td>\"\r\n");
      out.write("                                       +\"</tr>\"\r\n");
      out.write("                                       +\"<tr>\"\r\n");
      out.write("                                          +\"<td>전공 : ");
      out.print(stdList.get(i*3+j).getMajor());
      out.write("</td>\"\r\n");
      out.write("                                          +\"<td>흡연 : ");
      out.print(stdList.get(i*3+j).getSmoking());
      out.write("</td>\"\r\n");
      out.write("                                          +\"<td style = 'display:none' class = 'userNo'>");
      out.print(stdList.get(i*3+j).getUserNo());
      out.write("</td>\"\r\n");
      out.write("                                       +\"</tr>\"\r\n");
      out.write("                                    +\"</table>\"\r\n");
      out.write("                                 +\"</div\");\r\n");
      out.write("            ");
} 
      out.write("\r\n");
      out.write("         ");
}
      out.write("\r\n");
      out.write("      ");
} 
      out.write("\r\n");
      out.write("   ");
} 
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function resetSeat(){\r\n");
      out.write("\tif(!confirm(\"초기화 하시겠습니까 ?\")){\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t");
for (int i = 0 ; i < stdList.size() ; i++){
      out.write("\r\n");
      out.write("\t   seatMap.put(\"");
      out.print(stdList.get(i).getUserNo());
      out.write("\",\"N\");\r\n");
      out.write("\t");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t");
 
		int ccountSize = stdList.size();
		int ccount = 1;
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t");
for (int i = 0 ; i < 10 ; i++){ 
      out.write("\r\n");
      out.write("    ");
for (int j = 0 ; j < 3 ; j++){ 
      out.write("\r\n");
      out.write("       ");
if(ccountSize > 0 && stdList.get(i*3+j) != null){ 
      out.write("\r\n");
      out.write("          ");
 ccountSize--;
      out.write("\r\n");
      out.write("         \r\n");
      out.write("             $(\"#list");
      out.print(ccount);
      out.write("\").html(\"<div id = 'std");
      out.print((i*3+j+1));
      out.write("' class='std' draggable='true' ondragstart='drag(event)'>\"\r\n");
      out.write("                                   +\"<table id='stdInfo");
      out.print((i*3+j+1));
      out.write("'>\"\r\n");
      out.write("                                     +\"<tr>\"\r\n");
      out.write("                                        +\"<td>");
      out.print(stdList.get(i*3+j).getUserName());
      out.write("</td>\"\r\n");
      out.write("                                        +\"<td>");
      out.print(stdList.get(i*3+j).getRRN());
      out.write("</td>\"\r\n");
      out.write("                                     +\"</tr>\"\r\n");
      out.write("                                     +\"<tr>\"\r\n");
      out.write("                                        +\"<td>수준 : ");
      out.print(stdList.get(i*3+j).getStdLv());
      out.write("</td>\"\r\n");
      out.write("                                        +\"<td>경험 : ");
      out.print(stdList.get(i*3+j).getExp());
      out.write("</td>\"\r\n");
      out.write("                                     +\"</tr>\"\r\n");
      out.write("                                     +\"<tr>\"\r\n");
      out.write("                                        +\"<td>전공 : ");
      out.print(stdList.get(i*3+j).getMajor());
      out.write("</td>\"\r\n");
      out.write("                                        +\"<td>흡연 : ");
      out.print(stdList.get(i*3+j).getSmoking());
      out.write("</td>\"\r\n");
      out.write("                                        +\"<td style = 'display:none' class = 'userNo'>");
      out.print(stdList.get(i*3+j).getUserNo());
      out.write("</td>\"\r\n");
      out.write("                                     +\"</tr>\"\r\n");
      out.write("                                  +\"</table>\"\r\n");
      out.write("                               +\"</div\");\r\n");
      out.write("\r\n");
      out.write("          \r\n");
      out.write("             $(\"#sNo");
      out.print(ccount);
      out.write("\").html(\"");
      out.print(ccount);
      out.write("\");\r\n");
      out.write("             ");
ccount++; 
      out.write("\r\n");
      out.write(" \r\n");
      out.write("          \r\n");
      out.write("       ");
} 
      out.write("\r\n");
      out.write("    ");
} 
      out.write('\r');
      out.write('\n');
      out.write(' ');
} 
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
