
--게시판 조아요--
CREATE TABLE GOOD(
      GID NUMBER PRIMARY KEY,
      RID NUMBER REFERENCES F_REPLY(RID), 
      USER_NO NUMBER REFERENCES MEMBER(USER_NO), 
      STATUS VARCHAR2(1)DEFAULT 'Y'
);

-- 게시판 대댓글(답글)--
CREATE TABLE F_ANSWER(
  AID NUMBER PRIMARY KEY,
  ACONTENT VARCHAR2(400),
  RID NUMBER,
  AWRITER NUMBER,
  CREATE_DATE DATE,
  MODIFY_DATE DATE,
  STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  FOREIGN KEY (RID) REFERENCES F_REPLY(RID),
  FOREIGN KEY (AWRITER) REFERENCES MEMBER(USER_NO)
);




CREATE OR REPLACE VIEW N_BLIST 
AS 
SELECT ROWNUM RNUM, BID, CID, BTITLE, BCONTENT, BTYPE, USER_NO, USER_NAME, BCOUNT, CREATE_DATE, MODIFY_DATE, STATUS, BLEVEL
FROM (SELECT B.BID, B.CID, B.BTITLE,B. BCONTENT,B.BTYPE, M.USER_NO, M.USER_NAME, B.BCOUNT, B.CREATE_DATE, B.MODIFY_DATE, B.STATUS, B.BLEVEL
      FROM N_BOARD B
      JOIN MEMBER M ON(B.BWRITER = M.USER_NO)
      WHERE B.STATUS = 'Y'
      ORDER BY BLEVEL DESC, BID DESC);

CREATE OR REPLACE VIEW N_BDETAIL
AS 
SELECT B.BID, B.CID, B.BTITLE,B. BCONTENT,B.BTYPE, M.USER_NO, M.USER_NAME, B.BCOUNT, B.CREATE_DATE, B.MODIFY_DATE, B.STATUS, B.BLEVEL
      FROM N_BOARD B
      JOIN MEMBER M ON(B.BWRITER = M.USER_NO)
      WHERE B.STATUS = 'Y';

CREATE OR REPLACE VIEW N_ADETAIL 
AS 
SELECT B.RNUM, A.FID, A.BID, B.CID, B.BTITLE, B.USER_NAME, B.BCONTENT, B.BTYPE, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, UPLOAD_DATE, FILE_LEVEL, DOWNLOAD_COUNT, A.STATUS, B.BLEVEL 
FROM N_ATTACH A
JOIN N_blist B ON(B.BID = A.BID)
WHERE B.STATUS = 'Y';   


CREATE OR REPLACE VIEW F_BLIST 
AS 
SELECT ROWNUM RNUM, BID, CID, BTITLE, BCONTENT, BTYPE, USER_NO, USER_NAME, BCOUNT, CREATE_DATE, MODIFY_DATE, STATUS, BLEVEL
FROM (SELECT B.BID, B.CID, B.BTITLE,B. BCONTENT,B.BTYPE, M.USER_NO, M.USER_NAME, B.BCOUNT, B.CREATE_DATE, B.MODIFY_DATE, B.STATUS, B.BLEVEL
      FROM F_BOARD B
      JOIN MEMBER M ON(B.BWRITER = M.USER_NO)
      WHERE B.STATUS = 'Y'
      ORDER BY BLEVEL DESC, BID DESC);

CREATE OR REPLACE VIEW F_BDETAIL
AS 
SELECT B.BID, B.CID, B.BTITLE,B. BCONTENT,B.BTYPE, M.USER_NO, M.USER_NAME, B.BCOUNT, B.CREATE_DATE, B.MODIFY_DATE, B.STATUS, B.BLEVEL
      FROM F_BOARD B
      JOIN MEMBER M ON(B.BWRITER = M.USER_NO)
      WHERE B.STATUS = 'Y';

CREATE OR REPLACE VIEW F_ADETAIL 
AS 
SELECT B.RNUM, A.FID, A.BID, B.CID, B.BTITLE, B.USER_NO, B.USER_NAME, B.BCONTENT, B.BTYPE, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, UPLOAD_DATE, FILE_LEVEL, DOWNLOAD_COUNT, A.STATUS, B.BLEVEL 
FROM F_ATTACH A
JOIN F_BLIST B ON(B.BID = A.BID)
WHERE B.STATUS = 'Y';   



CREATE OR REPLACE VIEW F_RLIST
AS
SELECT RID, RCONTENT, REF_BID, USER_NAME, USER_NO, R.CREATE_DATE, R.MODIFY_DATE, R.STATUS
FROM F_REPLY R
JOIN MEMBER M ON(R.RWRITER=M.USER_NO)
WHERE R.STATUS='Y'
ORDER BY RID DESC;

CREATE OR REPLACE VIEW F_GLIST
AS 
SELECT R.RID, R.RCONTENT,REF_BID AS BID, USER_NAME, USER_NO, CREATE_DATE, MODIFY_DATE, R.STATUS AS RSTATUS, NVL(G.COUNT,0) AS COUNT  
FROM F_RLIST R
LEFT JOIN (SELECT RID, COUNT(*) AS COUNT FROM GOOD GROUP BY RID) G ON (R.RID = G.RID);


CREATE OR REPLACE VIEW g_info
AS 
select g.gid, g.rid,  g.user_no, g.status, r.ref_bid 
from good g 
join f_reply r on(g.rid=r.rid);

CREATE OR REPLACE VIEW F_ALIST
AS
SELECT AID, ACONTENT, AWRITER, m.user_name, R.REF_BID AS BID, A.RID, A.CREATE_DATE, A.MODIFY_DATE, A.STATUS 
FROM F_ANSWER A 
JOIN F_REPLY R ON (A.RID = R.RID)
join member m on ( a.awriter = m.user_no);